"use strict";module.exports=(e,{services:t,exceptions:a,logger:s,getSchema:l})=>{const{ItemsService:n,MetaService:r}=t;e.post("/",(async(e,t,a)=>{try{let a=e.body;const s=new n("leagues",{schema:await l()});let r=await s.getKeysByQuery({filter:{slug:{_eq:a.league.slug}},limit:1}),u=await s.upsertOne({...a.league,...r.length>0&&{id:r[0]}});const i=new n("clubs",{schema:await l()});let c=await i.getKeysByQuery({filter:{slug:{_eq:a.club.slug}},limit:1}),g=await i.upsertOne({...a.club,...c.length>0&&{id:c[0]}});const d=new n("players",{schema:await l()});let p=await d.getKeysByQuery({filter:{slug:{_eq:a.slug}},limit:1}),_={...a,league:u,club:g,...p.length>0&&{id:p[0]}},o=await d.upsertOne(_);return t.json(o)}catch(e){t.json(null)}})),e.get("/",(async(e,t,a)=>{try{let{user_id:a,status:u,u23:i,gallery:c,favorites:g,players:d,clubs:p,leagues:_,squad:o,limit:y,page:m}=e.query;const w=new n("players",{schema:await l()}),h=new n("users",{schema:await l()}),f=new r({schema:await l("players"),accountability:{admin:!0}});let b=null;a&&(b=await h.readOne(a,{fields:["cards","favorites"]}));let q=b&&b.cards?JSON.parse(b.cards).map((e=>e.player_slug)):[],v=b&&b.favorites?JSON.parse(b.favorites).map((e=>e.player_slug)):[];var s=new Date;s.setDate(s.getDate()-7);let O={filter:{...u?{dnp_status:{_in:u}}:{_or:[{dnp_status:{_neq:"ok"}},{_and:[{dnp_status:{_eq:"back"},dnp_date_updated:{_gte:s.toISOString()}}]}]},...a&&g&&{slug:{_in:v}},...a&&c&&{slug:{_in:q}},...d&&{slug:{_in:d.split(",")}},...p&&{club:{slug:{_in:p.split(",")}}},..._&&{league:{slug:{_in:_.split(",")}}},...o&&{dnp_author:{nickname:{_eq:o}}},...i&&{_and:[{birth_date_i:{_nnull:!0}},{birth_date_i:{_gte:867747422}}]}},fields:["*","dnp_author.nickname","dnp_author.pictureUrl","dnp_author.slug","club.*","league.*"],meta:["total_count","filter_count"],sort:["-dnp_date_updated","league","club","name","-dnp_date_updated"],limit:parseInt(y)||20,offset:((parseInt(m)||1)-1)*(parseInt(y)||20)};return t.json({data:await w.readByQuery(O),meta:await f.getMetaForQuery("players",O)})}catch(e){return t.json({data:[],meta:{total_count:0,filter_count:0}})}})),e.get("/duplicates",(async(e,t,a)=>{const s=new n("players",{schema:await l()});return t.json(await s.readByQuery({group:["slug"],aggregate:{count:["id"]},limit:-1}).then((e=>e.filter((e=>parseInt(e.count.id)>1)))))}))};
