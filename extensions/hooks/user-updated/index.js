"use strict";function t(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var e=t(require("axios"));module.exports=({filter:t,action:a},{services:n,exceptions:s,logger:r,getSchema:u,env:d})=>{const{ItemsService:i,MetaService:l}=n,{ServiceUnavailableException:o}=s;t("items.create",(()=>{})),a("users.items.update",(async t=>{try{let a=[],{slug:n,cards_synced:s}=t.payload;if(0==s){let s=await e.default(d.SORARE_API_URL,{method:"POST",headers:{"Content-type":"application/json",APIKEY:d.SORARE_API_KEY},data:{query:`\n\t\t\t\t\t\t\tquery {\n\t\t\t\t\t\t\t\tuser(slug: "${n}") {\n\t\t\t\t\t\t\t\t\tpaginatedCards {\n\t\t\t\t\t\t\t\t\t  pageInfo {\n\t\t\t\t\t\t\t\t\t\thasNextPage\n\t\t\t\t\t\t\t\t\t\thasPreviousPage\n\t\t\t\t\t\t\t\t\t\tendCursor\n\t\t\t\t\t\t\t\t\t\tstartCursor\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  nodes {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t\t\t\tpictureUrl\n\t\t\t\t\t\t\t\t\t\trarity\n\t\t\t\t\t\t\t\t\t\tposition\n\t\t\t\t\t\t\t\t\t\tplayer {\n\t\t\t\t\t\t\t\t\t\t  id\n\t\t\t\t\t\t\t\t\t\t  slug\n\t\t\t\t\t\t\t\t\t\t  activeClub {\n\t\t\t\t\t\t\t\t\t\t\tdomesticLeague {\n\t\t\t\t\t\t\t\t\t\t\t  slug\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t`}});for(a=a.concat(s.data.data.user.paginatedCards.nodes);s.data.data.user.paginatedCards.pageInfo.hasNextPage;)s=await e.default(d.SORARE_API_URL,{method:"POST",headers:{"Content-type":"application/json",APIKEY:d.SORARE_API_KEY},data:{query:`\n\t\t\t\t\t\t\t  query {\n\t\t\t\t\t\t\t\tuser(slug: "${n}") {\n\t\t\t\t\t\t\t\t\t  paginatedCards(after: "${s.data.data.user.paginatedCards.pageInfo.endCursor}") {\n\t\t\t\t\t\t\t\t\t\tpageInfo {\n\t\t\t\t\t\t\t\t\t\t  hasNextPage\n\t\t\t\t\t\t\t\t\t\t  hasPreviousPage\n\t\t\t\t\t\t\t\t\t\t  endCursor\n\t\t\t\t\t\t\t\t\t\t  startCursor\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\t\t\t\t  id\n\t\t\t\t\t\t\t\t\t\t  slug\n\t\t\t\t\t\t\t\t\t\t  pictureUrl\n\t\t\t\t\t\t\t\t\t\t  rarity\n\t\t\t\t\t\t\t\t\t\t  position\n\t\t\t\t\t\t\t\t\t\t  player {\n\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t\t\t\t\tactiveClub {\n\t\t\t\t\t\t\t\t\t\t\t  domesticLeague {\n\t\t\t\t\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t  slug\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t  `}}),a=a.concat(s.data.data.user.paginatedCards.nodes);a=a.filter((t=>"common"!=t.rarity));let l=a.map((e=>({user_id:t.payload.id,card_slug:e.slug,player_slug:e.player.slug,club_slug:e.player.activeClub?.slug,league_slug:e.player.activeClub?.domesticLeague?.slug,picture_url:e.pictureUrl})));const o=new i("users",{schema:await u()});await o.updateOne(t.payload.id,{cards:JSON.stringify(l),cards_synced:!0}),r.info(`Cards updated for user "${t.payload.slug}" `)}return t}catch(t){throw console.log(t),new o(t)}}))};
